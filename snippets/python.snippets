snippet #!
	#!/usr/bin/python

snippet im
	import
# Module Docstring
snippet docs
	'''
	File: ${1:`Filename('$1.py', 'foo.py')`}
	Author: ${2:`g:snips_author`}
	Description: ${3}
	'''
snippet wh
	while ${1:condition}:
		${2:# code...}
snippet for
	for ${1:needle} in ${2:haystack}:
		${3:# code...}
# New Class
snippet cl
	class ${1:ClassName}(${2:object}):
		"""${3:docstring for $1}"""
		def __init__(self, ${4:arg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			${6}
# New Function
snippet dp
	def ${1:fname}(${2:`indent('.') ? 'self,' : ''`}${3:args}):
		"""
		${4:docstring for $1}
		"""
		${5:pass}
snippet deff
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		${3}
# New Method
snippet defs
	def ${1:mname}(self, ${2:arg}):
		${3:pass}
# New Property
snippet property
	def ${1:foo}():
		doc = "${2:The $1 property.}"
		def fget(self):
			${3:return self._$1}
		def fset(self, value):
			${4:self._$1 = value}
# Lambda
snippet ld
	${1:var} = lambda ${2:vars} : ${3:action}
snippet l
	self.
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
snippet try Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
snippet try Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
snippet try Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
# if __name__ == '__main__':
snippet main
	if __name__ == '__main__':
		${1:main()}
# __magic__
snippet _
	__${1:init}__${2}
snippet if
	if ${1:var1} ${2:is} ${3:critical}:
		${4:var2} = ${5:value}
	elif $1 ${6:is} ${7:another critical}:
		$4 = ${8:value}
	else:
		$4 = ${9:whatever}
snippet pdb
	import vimpdb; vimpdb.set_trace()
snippet todo
	# TODO 

snippet pi
	if __name__ == '__main__':
		app = QtGui.QApplication(sys.argv)
		window = ${1:Ui_MainWindow}()
		window.show()
		sys.exit(app.exec_())

snippet pu
	import sys
	from PyQt4 import QtGui
	from ${1:MyUi2PythonFile} import Ui_MainWindow
	class Main(QtGui.QMainWindow):
		"""
		${2:docstring for Main}
		"""
		def __init__(self):
			QtGui.QMainWindow.__init__(self)
			self.ui = Ui_MainWindow()
			self.ui.setupUi(self)
			# self.ui.btnSayHello.clicked.connect(self.btnSayHello_Clicked)

		# def btnSayHello_Clicked(self):
			# self.ui.txtHelloWorld.setText("hello world!!")
			# pass

	if __name__ == '__main__':
		app = QtGui.QApplication(sys.argv)
		window = Main()
		window.show()
		sys.exit(app.exec_())

snippet pp
	import sys,os
	sys.path.append( os.path.dirname(__file__)+'/..${1:/../..}' )
